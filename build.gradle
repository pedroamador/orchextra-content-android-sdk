// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'org.sonarqube'
apply plugin: 'kotlin'

buildscript {
  ext.kotlin_version = '1.2.10'
  repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.0.0'
    // Publish an Android library through Jitpack -- Mandatory
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
    classpath 'me.tatarka:gradle-retrolambda:3.6.1'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

// Required because retrolambda is on maven central
repositories {
  jcenter()
  mavenCentral()
  maven { url "https://jitpack.io" }
  maven { url "https://plugins.gradle.org/m2/" }
}

allprojects {
  repositories {
    jcenter()
    google()
    mavenCentral()
    maven { url "https://jitpack.io" }
  }
   tasks.withType(JavaCompile) {
    sourceCompatibility = "1.7"
    targetCompatibility = "1.7"
  }
}

sonarqube {
  properties {
    property "sonar.host.url", "https://sonar-qa.gigigoapps.com/"
    property "sonar.login", "75cc4ce0870c495e5f1dbe249f56224c114fef6c"
    property "sonar.projectName", "Ocm Android"
    property "sonar.projectKey", "ocm-android"
//    property "sonar.projectVersion", "${rootProject.ext.ocm.version}"
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.scm.provider", "git"
  }
}

import org.gradle.internal.os.OperatingSystem;

def Flavor = "Ocm"

task sonarComplete(type: Exec) {
  workingDir "./"
  def command = "./gradlew"
  if (OperatingSystem.current().isWindows()) {
    command = command + ".bat"
  }

  commandLine command, "clean", "assemble${Flavor}Debug", "lint${Flavor}Debug", "jacocoTest${Flavor}DebugUnitTestReport", "sonarqube"
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}
compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}